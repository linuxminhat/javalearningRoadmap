package arrays_hashing;

public class leetcode88_diffwayUpdating {
//	nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3
	//Using 2-pointer technique
	public static void merge(int[] nums1, int m, int[] nums2, int n) {
		int i=m-1;//Duyet nums1
		int j=n-1;//Duyet nums2
		int k=(m+n)-1;//Duyet big nums1[]
		int[] nums1_copy = new int[k];
		while(k>=0) {
			if(j<0) {
				nums1_copy[k]=nums1[i];
				i--;
			}else {
				if(i<0) {
					nums1_copy[k]=nums2[j];
				}else{
					if(nums1[i]>nums2[j]){
						nums1_copy[k]=nums1[i];
						i--;
					}else {
						if(nums2[j]>nums1[i]){
							nums1_copy[k]=nums2[j];
							j--;
					}
				}
			}
		 }
			k--;
     }
 }
	public static void main(String[] args) {
		int[] n1= {1,2,3};
		int[] n2= {2,5,6};
		
	}
}
